#summary Determine if a physical interface corresponds to a Web page

= Correspondence =

This method of verifying that a program resident on a microcontroller [http://en.wikipedia.org/wiki/Correspondence_(theology) corresponds] to a particular web page is offered as a proposal. You can try this example by visiting this [http://zambetti.com/projects/seriality/examples/correspondence.html test page] while a Wiring or Arduino board is connected and running the program provided below.

== HTML/JS/Seriality ==

{{{
<html>
<head>

  <script type="text/javascript">

    // create global reference
    var serial;
  
    function setup()
    {
      // instantiate seriality
      serial = (document.getElementById("seriality")).Seriality();

      // begin serial communications on first known serial port at 9600 baud, bail on failure
      if (!serial.begin(serial.ports[0], 9600)) {
        alert("No physical interface");
        return;
      }

      // verify that the physical interface corresponds to this web page, bail on failure
      if (!verifyPhysicalInterface()) {
        alert("Incorrect physical interface");
        serial.end();
        return;
      }

      // physical interface corresponds to this web page
      alert("Correct physical interface");
    }
    
    // utility function to request and parse the correspondence identifier
    function verifyPhysicalInterface(strict, version)
    {
      // request the correspondence identifier
      serial.write("@");

      // allow time for the response (100ms)
      var now = new Date();
      var then = new Date();
      while (now - then < 100) {
        now = new Date();
      }

      // optional parameter for physical interface versioning
      if (undefined === version) {
        version = 0;
      }

      // optional parameter to allow domain-wide physical interfaces by disabling strict mode
      if (undefined === strict) {
        strict = true;
      }

      // parse correspondence identifier
      if (serial.available()) {
        var identifier = eval('(' + serial.readJSON() + ')');
        if (undefined === identifier) {
          return false;
        }
        if (version > 0) {
          if (undefined === identifier.version) {
            return false;
          }
          if (identifier.version < version) {
            return false;
          }
        }
        if (-1 == location.host.indexOf(identifier.domain)) {
          return false;
        }
        if (strict) {
          if (0 != location.pathname.indexOf(identifier.page)) {
            return false;
          }
        }
        return true;
      }
      return false;
    }

  </script>

</head>
<body onload="setup();">

  <object type="application/Seriality" id="seriality" width="0" height="0"></object>

</body>
</html>
}}}

== Wiring/Arduino ==

{{{
void setup()
{
  Serial.begin(9600);
}

void loop()
{
  char in;
  if (Serial.available()) {
    in = Serial.read();
    // process correspondence request
    if (in == '@') {
      // reply with correspondence identifier
      Serial.print("{'domain':'zambetti.com','page':'/projects/seriality/examples/correspondence.html'}");
    }
  }
}
}}}

= Correspondence Request =

The '@' character is used to request the correspondence identifier from an attached serial device. A JSON-formatted correspondence identifier is expected in return.

= Correspondence Identifiers =

There are two types of correspondence
  * Page correspondence - for page-specific physical interfaces
  * Domain correspondence - for domain-wide physical interfaces

For a physical interface to be verified as corresponding to a Web page, the correspondence identifier returned after a correspondence request must match what is expected by the page itself. Simply put, the parameters supplied when calling verifyPhysicalInterface() must match the content of the correspondence identifier received.

== domain ==



== page ==

== version ==

Additionally, a version property is provided to allow for various releases of firmware that correspond to the same page or domain. This can be used to prompt users to update their firmware as needed.

Correspondence identifier with version property
{{{
{'domain':'zambetti.com','page':'/projects/seriality/examples/correspondence.html','version':1}
}}}

How to invoke the verification function to enforce versioning
{{{
verifyPhysicalInterface(true, 1) // page correspondence
verifyPhysicalInterface(false, 1) // domain correspondence
}}}